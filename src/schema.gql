type Edge{
	id: Int!
	capcity: Int!
	node1_alias: String!
	node2_alias: String!
	createdAt: Date!
	updatedAt: Date!
}

scalar Date

type Query{
  getEdges(): [Edge!]!
  getEdge(id: Int!): Edge!
}

type Mutation{
    createEdge(input: createEdgeInput!): Edge!
	updateEdge(id: Int!, input: UpdateEdgeInput!): Edge!
	removeEdge(id:Int): Boolean!
}

input createEdgeInput{
	node1_alias: String!
	node2_alias: String!
}

input UpdateEdgeInput{
	node1_alias: String!
	node2_alias: String!
}